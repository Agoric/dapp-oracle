version: "3.6"
x-chainlink-def:
  &chainlink-def
  image: smartcontract/chainlink:latest
  restart: on-failure
  secrets:
    - node_password
    - apicredentials
  env_file:
    - ./chainlink.env
  command: 'node start -d -p /run/secrets/node_password -a /run/secrets/apicredentials'
x-postgres-def:
  &postgres-def
  image: postgres
  restart: on-failure
  environment:
    - "POSTGRES_MULTIPLE_DATABASES=chainlink,ei"
    - "POSTGRES_HOST_AUTH_METHOD=trust"
x-ag-solo-node-def:
  &ag-solo-node-def
  image: agoric/cosmic-swingset-solo
  restart: on-failure
  environment:
    - "AG_NETWORK_CONFIG=${AG_NETWORK_CONFIG}"
  command: 'setup --webport="${AG_SOLO_WEBPORT}" --webhost=0.0.0.0 --netconfig=${AG_NETWORK_CONFIG}'
x-external-initiator-def:
  &external-initiator-def
  # image: smartcontract/external-initiator
  image: agoric/chainlink-external-initiator
  command: '{\"name\":\"agoric-node\",\"type\":\"agoric\",\"url\":\"${EI_AGORICURL}\"}'
x-agoric-adapter-def:
  &agoric-adapter-def
  # image: smartcontract/agoric-adapter
  image: agoric/chainlink-adapter
  restart: on-failure
  env_file:
    - ./adapter.env
services:
  chainlink-node1:
    <<: *chainlink-def
    depends_on:
      - postgres-node1
    ports:
      - "6691:6688"
    environment:
      - "DATABASE_URL=postgresql://chainlink@agoric-chainlink_postgres-node1_1:5432/chainlink?sslmode=disable"
    volumes:
      - 'cl1:/chainlink'
  postgres-node1:
    <<: *postgres-def
    volumes:
      - './docker-init-scripts:/docker-entrypoint-initdb.d'
      - 'pg1:/var/lib/postgresql/data'
  ag-solo-node1:
    <<: *ag-solo-node-def
    ports:
      - "8001"
    environment:
      - "AG_SOLO_WEBPORT=8001"
    volumes:
      - 'ag1:/usr/src/app/solo'
      - '$HOME/.agoric:/root/.agoric'
      - '$PWD/network-config.json:$PWD/network-config.json'
  external-initiator-node1:
    <<: *external-initiator-def
    depends_on:
      - postgres-node1
    environment:
      - "EI_AGORICURL=http://agoric-chainlink_ag-solo-node1_1:8001"
      - "EI_DATABASEURL=postgresql://ei@agoric-chainlink_postgres-node1_1:5432/ei?sslmode=disable"
      - "EI_CHAINLINKURL=http://agoric-chainlink_chainlink-node1_1:6688/"
    env_file:
      - ./external_initiator1.env
  agoric-adapter1:
    <<: *agoric-adapter-def
    environment:
      - "EI_AGORICURL=http://agoric-chainlink_ag-solo-node1_1:8001"
  chainlink-node2:
    <<: *chainlink-def
    depends_on:
      - postgres-node2
    ports:
      - "6692:6688"
    environment:
      - "DATABASE_URL=postgresql://chainlink@agoric-chainlink_postgres-node2_1:5432/chainlink?sslmode=disable"
    volumes:
      - 'cl2:/chainlink'
  postgres-node2:
    <<: *postgres-def
    volumes:
      - './docker-init-scripts:/docker-entrypoint-initdb.d'
      - 'pg2:/var/lib/postgresql/data'
  ag-solo-node2:
    <<: *ag-solo-node-def
    ports:
      - "8002"
    environment:
      - "AG_SOLO_WEBPORT=8003"
    volumes:
      - 'ag2:/usr/src/app/solo'
      - '$HOME/.agoric:/root/.agoric'
      - '$PWD/network-config.json:$PWD/network-config.json'
  external-initiator-node2:
    <<: *external-initiator-def
    depends_on:
      - postgres-node2
    environment:
      - "EI_AGORICURL=http://agoric-chainlink_ag-solo-node2_1:8002"
      - "EI_DATABASEURL=postgresql://ei@agoric-chainlink_postgres-node2_1:5432/ei?sslmode=disable"
      - "EI_CHAINLINKURL=http://agoric-chainlink_chainlink-node2_1:6688/"
    env_file:
      - ./external_initiator2.env
  agoric-adapter2:
    <<: *agoric-adapter-def
    environment:
      - "EI_AGORICURL=http://agoric-chainlink_ag-solo-node2_1:8002"
  chainlink-node3:
    <<: *chainlink-def
    depends_on:
      - postgres-node3
    ports:
      - "6693:6688"
    environment:
      - "DATABASE_URL=postgresql://chainlink@agoric-chainlink_postgres-node3_1:5432/chainlink?sslmode=disable"
    volumes:
      - 'cl3:/chainlink'
  postgres-node3:
    <<: *postgres-def
    volumes:
      - './docker-init-scripts:/docker-entrypoint-initdb.d'
      - 'pg3:/var/lib/postgresql/data'
  ag-solo-node3:
    <<: *ag-solo-node-def
    ports:
      - "8003"
    environment:
      - "AG_SOLO_WEBPORT=8003"
    volumes:
      - 'ag3:/usr/src/app/solo'
      - '$HOME/.agoric:/root/.agoric'
      - '$PWD/network-config.json:$PWD/network-config.json'
  external-initiator-node3:
    <<: *external-initiator-def
    depends_on:
      - postgres-node3
    environment:
      - "EI_AGORICURL=http://agoric-chainlink_ag-solo-node3_1:8003"
      - "EI_DATABASEURL=postgresql://ei@agoric-chainlink_postgres-node3_1:5432/ei?sslmode=disable"
      - "EI_CHAINLINKURL=http://agoric-chainlink_chainlink-node3_1:6688/"
    env_file:
      - ./external_initiator3.env
  agoric-adapter3:
    <<: *agoric-adapter-def
    environment:
      - "EI_AGORICURL=http://agoric-chainlink_ag-solo-node3_1:8003"
volumes:
  pg1:
  cl1:
  ag1:
  pg2:
  cl2:
  ag2:
  pg3:
  cl3:
  ag3:
secrets:
  node_password:
    file: ./secrets/password.txt
  apicredentials:
    file: ./secrets/apicredentials
